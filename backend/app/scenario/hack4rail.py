import numpy as np
from flatland.envs.timetable_utils import Line, Timetable
from flatland.envs.rail_grid_transition_map import RailGridTransitionMap
from flatland.core.grid.rail_env_grid import RailEnvTransitions
from flatland.envs.observations import TreeObsForRailEnv
from flatland.envs.predictions import ShortestPathPredictorForRailEnv
from flatland.envs.malfunction_generators import (
    ParamMalfunctionGen,
    MalfunctionParameters,
)

from .static import create_static_env


def create_hack4rail_env():
    """
    Create a static Flatland environment for the Hack4Rail competition.
    The environment is defined by a specific grid, line, and timetable.
    """

    width = 34
    height = 6

    map = RailGridTransitionMap(
        width=width, height=height, transitions=RailEnvTransitions()
    )
    map.grid = np.array(
        [
            [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
            ],
            [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
            ],
            [
                0,
                0,
                4,
                1025,
                1025,
                1025,
                4608,
                0,
                0,
                0,
                16386,
                1025,
                1025,
                1025,
                4608,
                0,
                0,
                0,
                16386,
                1025,
                1025,
                1025,
                1025,
                17411,
                1025,
                1025,
                1025,
                5633,
                1025,
                1025,
                1025,
                256,
                0,
                0,
            ],
            [
                0,
                0,
                4,
                1025,
                1025,
                1025,
                1097,
                1025,
                1025,
                1025,
                3089,
                1025,
                1025,
                1025,
                1097,
                1025,
                1025,
                1025,
                3089,
                1025,
                1025,
                1025,
                1025,
                2064,
                0,
                0,
                0,
                72,
                1025,
                1025,
                1025,
                256,
                0,
                0,
            ],
            [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
            ],
            [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
            ],
        ]
    )

    return create_static_env(
        width=width,
        height=height,
        map=map,
        line=Line(
            agent_positions=[
                [(3, 4)],
                [(2, 4), (3, 16)],
                [(2, 29)],
                [(3, 29), (3, 16)],
            ],
            agent_directions=[[1], [1, 1], [3], [3, 3]],
            agent_targets=[(2, 29), (3, 29), (3, 4), (2, 4)],
            agent_speeds=[1.0, 0.8, 1.0, 0.8],
        ),
        timetable=Timetable(
            earliest_departures=[
                [4, None],
                [0, 21, None],
                [4, None],
                [0, 24, None],
                [0, None],
            ],
            latest_arrivals=[
                [None, 29],
                [None, 19, 43],
                [None, 29],
                [None, 22, 43],
                [None, 0],
            ],
            max_episode_steps=120,
        ),
        obs_builder=TreeObsForRailEnv(
            max_depth=1, predictor=ShortestPathPredictorForRailEnv()
        ),
        malfunction_generator=ParamMalfunctionGen(
            MalfunctionParameters(
                min_duration=10,
                max_duration=50,
                malfunction_rate=1.0 / 50.0,
            )
        ),
    )
